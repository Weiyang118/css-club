{
  "Round Buttons": {
    "title": "Round Buttons",
    "icon": "fas fa-hand-pointer",
    "description": "用于触发操作的基础按钮组件，支持多种颜色主题和大小。",
    "demo": "./assets/files/round-button.html",
    "code": {
        "html": "<div class=\"btn messenger\">\n  <div><i class=\"bi bi-messenger\"></i></div>\n</div>\n<div class=\"btn facebook\">\n  <div><i class=\"bi bi-facebook\"></i></div>\n</div>\n<div class=\"btn x\">\n  <div><i class=\"bi bi-twitter-x\"></i></div>\n</div>",
        "css": "body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  height: 100vh;\n  background-color: #ecf0f1;\n}\n\n.round-btn {\n  margin: 20px;\n  text-align: center;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  cursor: pointer;\n  width: 100px;\n  height: 50px;\n  color: white;\n}\n\n.round-btn div {\n  transform: rotateX(45deg);\n  font-size: 33px;\n}\n\n.messenger {\n  box-shadow: 0px 5px #c94c8c, 0px 10px #c94c8c, 0px 15px #c94c8c, 0px 20px #c94c8c, 0px 25px #c94c8c;\n  background-image: linear-gradient(45deg, #ff7161 0%, #c13ad5 100%);\n}\n\n.facebook {\n  box-shadow: 0px 5px #004298, 0px 10px #004298, 0px 15px #004298, 0px 20px #004298, 0px 25px #004298;\n  background-color: #1877f2;\n}\n\n.x {\n  box-shadow: 0px 5px #000, 0px 10px #000, 0px 15px #000, 0px 20px #000, 0px 25px #000;\n  background-color: #292929;\n}"
    }
  },
  "effects-slider-particles": {
  "title": "Effects Sliderarticles",
  "icon": "fas fa-sliders-h",
  "description": "带有金色粒子动画的自定义滑块组件，交互时会触发粒子爆炸效果，适用于游戏或高亮视觉效果展示。",
  "demo": "./assets/files/particle-slider.html",
  "code": {
    "html": "<canvas id=\"particleCanvas\"></canvas>\n<div class=\"slider-container\">\n  <div class=\"value-bubble\" id=\"bubble\">50</div>\n  <input type=\"range\" id=\"slider\" min=\"0\" max=\"100\" value=\"50\">\n</div>",
    "css": "body {\n  background: #0b0c10;\n  margin: 0;\n  overflow: hidden;\n  font-family: 'Segoe UI', sans-serif;\n}\n\n#particleCanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 0;\n  pointer-events: none;\n}\n\n.slider-container {\n  position: absolute;\n  bottom: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  width: 80%;\n  max-width: 500px;\n  z-index: 2;\n}\n\ninput[type=range] {\n  width: 100%;\n  height: 16px;\n  appearance: none;\n  background: linear-gradient(90deg, gold, orange);\n  border-radius: 8px;\n  outline: none;\n  box-shadow: 0 0 15px gold;\n}\n\ninput[type=range]::-webkit-slider-thumb {\n  appearance: none;\n  width: 26px;\n  height: 26px;\n  background: white;\n  border-radius: 50%;\n  box-shadow: 0 0 10px gold, 0 0 30px orange;\n  transition: transform 0.2s ease;\n}\n\ninput[type=range]:active::-webkit-slider-thumb {\n  transform: scale(1.2);\n}\n\n.value-bubble {\n  position: absolute;\n  top: -50px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: gold;\n  color: black;\n  padding: 8px 14px;\n  border-radius: 20px;\n  font-size: 18px;\n  font-weight: bold;\n  box-shadow: 0 0 10px gold;\n  pointer-events: none;\n}",
    "js": "const canvas = document.getElementById('particleCanvas');\nconst ctx = canvas.getContext('2d');\nlet particles = [];\n\nfunction resizeCanvas() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\nresizeCanvas();\nwindow.addEventListener('resize', resizeCanvas);\n\nclass Particle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.size = Math.random() * 4 + 2;\n    this.speedX = (Math.random() - 0.5) * 6;\n    this.speedY = (Math.random() - 0.5) * 6;\n    this.alpha = 1;\n  }\n\n  update() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.alpha -= 0.02;\n  }\n\n  draw() {\n    ctx.fillStyle = `rgba(255, 215, 0, ${this.alpha})`;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\n\nfunction animateParticles() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (let i = particles.length - 1; i >= 0; i--) {\n    const p = particles[i];\n    p.update();\n    p.draw();\n    if (p.alpha <= 0) {\n      particles.splice(i, 1);\n    }\n  }\n  requestAnimationFrame(animateParticles);\n}\nanimateParticles();\n\nfunction emitParticles(x, y) {\n  for (let i = 0; i < 20; i++) {\n    particles.push(new Particle(x, y));\n  }\n}\n\nconst slider = document.getElementById(\"slider\");\nconst bubble = document.getElementById(\"bubble\");\n\nfunction setBubble(slider, bubble) {\n  const val = slider.value;\n  const min = slider.min ? slider.min : 0;\n  const max = slider.max ? slider.max : 100;\n  const newVal = Number(((val - min) * 100) / (max - min));\n  bubble.innerHTML = val;\n  bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\n\n  const rect = slider.getBoundingClientRect();\n  const x = rect.left + (rect.width * newVal / 100);\n  const y = rect.top + rect.height / 2;\n  emitParticles(x, y);\n}\n\nslider.addEventListener(\"input\", () => {\n  setBubble(slider, bubble);\n});\n\nwindow.addEventListener(\"load\", () => {\n  setBubble(slider, bubble);\n});"
  }
},
  "liquid-button": {
    "title": "Liquid Button",
    "icon": "fas fa-id-card",
    "description": "灵活的内容容器，可以包含各种内容和操作。",
    "demo": "./assets/files/liquid-button.html",
    "code": {
        "html": "<div class=\"container\">\n  <button class=\"btn-liquid\" id=\"liquidBtn\">\n    <span>Liquid Button</span>\n  </button>\n</div>",
        "css": "* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\n\nbody {\nbackground: linear-gradient(135deg, #04364f 0%, #0b60a9 50%, #062d63 100%);\nmin-height: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-family: 'Arial', sans-serif;\noverflow: hidden;\n}\n\n\n.container {\nposition: relative;\nwidth: 100vw;\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n\n\n.btn-liquid {\nposition: relative;\nwidth: 200px;\nheight: 60px;\ncursor: pointer;\nborder: none;\nbackground: transparent;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nz-index: 10;\n}\n\n\n.btn-liquid canvas {\nposition: absolute;\ntop: -50px;\nleft: -50px;\npointer-events: none;\n}\n\n\n.btn-liquid span {\nposition: relative;\nz-index: 20;\ncolor: white;\nfont-size: 18px;\nfont-weight: 900;\ntext-shadow: 0 2px 4px rgba(0,0,0,0.3);\npointer-events: none;\n}\n\n\n.droplet {\nposition: absolute;\nwidth: 8px;\nheight: 8px;\nbackground: linear-gradient(45deg, #00d4ff, #007aff);\nborder-radius: 50% 50% 50% 0;\npointer-events: none;\nz-index: 1;\nbox-shadow: 0 2px 8px rgba(0, 212, 255, 0.5);\n}\n\n\n@keyframes dropfall {\n0% {\ntransform: translateY(0) rotate(0deg);\nopacity: 1;\n}\n100% {\ntransform: translateY(100vh) rotate(360deg);\nopacity: 0;\n}\n}",
        "js": "let pointsA = [];\nlet pointsB = [];\nlet canvas = null;\nlet context = null;\nlet button = null;\nlet buttonRect = null;\n\n\nconst points = 40;\nconst viscosity = 15;\nconst mouseDist = 80;\nconst damping = 0.08;\n\n\nlet mouseX = 0;\nlet mouseY = 0;\nlet relMouseX = 0;\nlet relMouseY = 0;\nlet mouseLastX = 0;\nlet mouseLastY = 0;\nlet mouseDirectionX = 0;\nlet mouseDirectionY = 0;\nlet mouseSpeedX = 0;\nlet mouseSpeedY = 0;\n\n\nfunction mouseDirection(e) {\nif (mouseX < e.pageX) mouseDirectionX = 1;\nelse if (mouseX > e.pageX) mouseDirectionX = -1;\nelse mouseDirectionX = 0;\n\n\nif (mouseY < e.pageY) mouseDirectionY = 1;\nelse if (mouseY > e.pageY) mouseDirectionY = -1;\nelse mouseDirectionY = 0;\n\n\nmouseX = e.pageX;\nmouseY = e.pageY;\n\n\nif (buttonRect) {\nrelMouseX = mouseX - buttonRect.left + 50;\nrelMouseY = mouseY - buttonRect.top + 50;\n}\n}\n\n\nfunction mouseSpeed() {\nmouseSpeedX = mouseX - mouseLastX;\nmouseSpeedY = mouseY - mouseLastY;\nmouseLastX = mouseX;\nmouseLastY = mouseY;\nsetTimeout(mouseSpeed, 50);\n}\n\n\nfunction Point(x, y, level) {\nthis.x = this.ix = 50 + x;\nthis.y = this.iy = 50 + y;\nthis.vx = 0;\nthis.vy = 0;\nthis.level = level;\n}\n\n\nPoint.prototype.move = function() {\nthis.vx += (this.ix - this.x) / (viscosity * this.level);\nthis.vy += (this.iy - this.y) / (viscosity * this.level);\n\n\nconst dx = this.ix - relMouseX;\nconst dy = this.iy - relMouseY;\nconst relDist = Math.max(0, 1 - Math.sqrt((dx * dx) + (dy * dy)) / mouseDist);\n\n\nif ((mouseDirectionX > 0 && relMouseX > this.x) || (mouseDirectionX < 0 && relMouseX < this.x)) {\nif (relDist > 0) {\nthis.vx += (mouseSpeedX / 3) * relDist;\n}\n}\nthis.vx *= (1 - damping);\nthis.x += this.vx;\n\n\nif ((mouseDirectionY > 0 && relMouseY > this.y) || (mouseDirectionY < 0 && relMouseY < this.y)) {\nif (relDist > 0) {\nthis.vy += (mouseSpeedY / 3) * relDist;\n}\n}\nthis.vy *= (1 - damping);\nthis.y += this.vy;\n\n\nconst buttonWidth = 250;\nconst buttonHeight = 60;\nconst cornerRadius = buttonHeight / 2;\nconst margin = 20;\n\n\nif (this.iy <= 5) {\nthis.y = Math.max(this.y, this.iy - margin);\nthis.y = Math.min(this.y, buttonHeight - margin);\n} else if (this.iy >= buttonHeight - 5) {\nthis.y = Math.min(this.y, this.iy + margin);\nthis.y = Math.max(this.y, margin);\n} else if (this.ix <= cornerRadius + 5) {\nthis.x = Math.max(this.x, this.ix - margin);\nthis.x = Math.min(this.x, buttonWidth - margin);\n} else if (this.ix >= buttonWidth - cornerRadius - 5) {\nthis.x = Math.min(this.x, this.ix + margin);\nthis.x = Math.max(this.x, margin);\n}\n\n\nthis.x = Math.max(5, Math.min(this.x, buttonWidth + 45));\nthis.y = Math.max(5, Math.min(this.y, buttonHeight + 45));\n};\n\n\nfunction addPoints(x, y) {\npointsA.push(new Point(x, y, 1));\npointsB.push(new Point(x, y, 1.5));\n}\n\n\nfunction initButton() {\nbutton = document.getElementById('liquidBtn');\n\n\nif (!button) {\nconsole.error('按钮元素未找到');\nreturn;\n}\n\n\nconst buttonWidth = 200;\nconst buttonHeight = 60;\n\n\ncanvas = document.createElement('canvas');\ncanvas.width = buttonWidth + 100;\ncanvas.height = buttonHeight + 100;\ncontext = canvas.getContext('2d');\nbutton.appendChild(canvas);\n\n\nconst cornerRadius = buttonHeight / 2;\n\n\nconst topPoints = Math.floor(points * 0.3);\nconst rightPoints = Math.floor(points * 0.2);\nconst bottomPoints = Math.floor(points * 0.3);\nconst leftPoints = points - topPoints - rightPoints - bottomPoints;\n\n\nconst straightWidth = buttonWidth - buttonHeight;\nfor (let i = 0; i < topPoints; i++) {\nconst x = cornerRadius + (straightWidth * i) / (topPoints - 1);\naddPoints(x, 0);\n}\n\n\nfor (let i = 0; i < rightPoints; i++) {\nconst angle = -Math.PI / 2 + (Math.PI * i) / (rightPoints - 1);\nconst x = buttonWidth - cornerRadius + Math.cos(angle) * cornerRadius;\nconst y = cornerRadius + Math.sin(angle) * cornerRadius;\naddPoints(x, y);\n}\n\n\nfor (let i = 0; i < bottomPoints; i++) {\nconst x = buttonWidth - cornerRadius - (straightWidth * i) / (bottomPoints - 1);\naddPoints(x, buttonHeight);\n}\n\n\nfor (let i = 0; i < leftPoints; i++) {\nconst angle = Math.PI / 2 + (Math.PI * i) / (leftPoints - 1);\nconst x = cornerRadius + Math.cos(angle) * cornerRadius;\nconst y = cornerRadius + Math.sin(angle) * cornerRadius;\naddPoints(x, y);\n}\n\n\nupdateButtonRect();\n\n\nrenderCanvas();\n}\n\n\nfunction updateButtonRect() {\nif (button) {\nbuttonRect = button.getBoundingClientRect();\n}\n}\n\n\nfunction renderCanvas() {\nrequestAnimationFrame(renderCanvas);\n\n\ncontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\nfor (let i = 0; i < pointsA.length; i++) {\npointsA[i].move();\npointsB[i].move();\n}\nconst gradientX = Math.max(0, Math.min(relMouseX, canvas.width));\nconst gradientY = Math.max(0, Math.min(relMouseY, canvas.height));\n\n\nconst gradient = context.createRadialGradient(\ngradientX, gradientY, 0,\ngradientX, gradientY, 150\n);\ngradient.addColorStop(0, '#00d4ff');\ngradient.addColorStop(1, '#007aff');\n\n\nconst groups = [pointsA, pointsB];\n\n\nfor (let j = 0; j < groups.length; j++) {\nconst points = groups[j];\n\n\nif (j === 0) {\ncontext.fillStyle = 'rgba(0, 212, 255, 0.8)';\n} else {\ncontext.fillStyle = gradient;\n}\n\n\ncontext.beginPath();\n\n\nif (points.length > 0) {\ncontext.moveTo(points[0].x, points[0].y);\n\n\nfor (let i = 0; i < points.length; i++) {\nconst current = points[i];\nconst next = points[(i + 1) % points.length];\nconst nextNext = points[(i + 2) % points.length];\n\n\nconst cp1x = current.x + (next.x - points[(i - 1 + points.length) % points.length].x) * 0.1;\nconst cp1y = current.y + (next.y - points[(i - 1 + points.length) % points.length].y) * 0.1;\nconst cp2x = next.x - (nextNext.x - current.x) * 0.1;\nconst cp2y = next.y - (nextNext.y - current.y) * 0.1;\n\n\ncontext.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, next.x, next.y);\n}\n}\n\n\ncontext.closePath();\ncontext.fill();\n\n\nif (j === 1) {\ncontext.shadowColor = '#00d4ff';\ncontext.shadowBlur = 20;\ncontext.fill();\ncontext.shadowBlur = 0;\n}\n}\n}\n\n\nfunction createDroplets(startX, startY) {\nconst dropletCount = Math.random() * 4 + 2;\n\n\nfor (let i = 0; i < dropletCount; i++) {\nsetTimeout(() => {\nconst droplet = document.createElement('div');\ndroplet.className = 'droplet';\n\n\nconst offsetX = (Math.random() - 0.5) * 40;\nconst offsetY = (Math.random() - 0.5) * 20;\n\n\ndroplet.style.left = startX + offsetX + 'px';\ndroplet.style.top = startY + offsetY + 'px';\n\n\nconst size = Math.random() * 4 + 4;\ndroplet.style.width = droplet.style.height = size + 'px';\n\n\nconst fallDuration = Math.random() * 2 + 2;\ndroplet.style.animation = `dropfall ${fallDuration}s ease-in forwards`;\n\n\ndocument.body.appendChild(droplet);\n\n\nsetTimeout(() => {\ndroplet.remove();\n}, fallDuration * 1000);\n}, i * 100);\n}\n}\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\nmouseSpeed();\ninitButton();\n\n\ndocument.addEventListener('mousemove', mouseDirection);\nwindow.addEventListener('resize', updateButtonRect);\n\n\nif (button) {\nbutton.addEventListener('click', (e) => {\ncreateDroplets(e.pageX, e.pageY);\n});\n}\n});\n\n\ndocument.addEventListener('mousemove', (e) => {\nconst mouseX = e.clientX / window.innerWidth;\nconst mouseY = e.clientY / window.innerHeight;\n\n\nconst hueStart = 210 + mouseX * 10;\nconst hueEnd = 230 + mouseY * 5;\nconst lightStart = 30 + mouseY * 10;\nconst lightEnd = 25 + mouseX * 10;\n\n\ndocument.body.style.background = `\nlinear-gradient(${130 + mouseX * 20}deg,\nhsl(${hueStart}, 60%, ${lightStart}%) 0%,\nhsl(${hueEnd}, 60%, ${lightEnd}%) 100%)\n`;\n});"
    }
  },
  "404-page":{
    "title": "404 Page",
    "icon": "fas fa-film",
    "description": "一个创意404页面，包含动画和交互元素，适用于网站错误页面。",
    "demo": "./assets/files/404-page.html",
    "code":{
      "html":"<img src=\"Looping Page Not Found GIF by STARFACE.gif\" class=\"dancer-gif\" />\n<div class=\"sub-title\">Page Not Found</div>\n\n\n<button class=\"go-home-btn\" onclick=\"location.href='index.html'\">Go Home</button>",
      "css":"body, html {\n  margin: 0; padding: 0; height: 100%;\n  background: #aff0e4;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  text-align: center;\n}\n\n.sub-title {\n  font-size: 3rem;\n  color: black;\n  font-family: 'Creepster', cursive;\n  margin-top: 1rem;\n  font-weight: 700;\n  z-index: 10;\n}\n\n.dancer-gif {\n  width: 500px;\n  height: auto;\n  position: relative;\n  z-index: 10;\n  margin: 0 auto;\n}\n\n.go-home-btn {\n  margin-top: 2rem;\n  padding: 1rem 3rem;\n  background: linear-gradient(135deg, #00ffe0, #00bfa6);\n  color: black;\n  font-size: 1.4rem;\n  font-weight: bold;\n  border: 2px solid #00d9c0;\n  border-radius: 50px;\n  cursor: pointer;\n  box-shadow: 0 0 15px #aff0e4, 0 0 30px #87ecda;\n  position: relative;\n  z-index: 10;\n  transition: all 0.3s ease;\n  animation: pulse 2.5s ease-in-out infinite alternate;\n}\n\n.go-home-btn::before {\n  content: \"\";\n  position: absolute;\n  top: -4px;\n  left: -4px;\n  right: -4px;\n  bottom: -4px;\n  background: linear-gradient(45deg, #00ffe0, #00c5ac);\n  border-radius: 50px;\n  z-index: -1;\n  filter: blur(12px);\n  animation: glow 4s linear infinite;\n}\n\n.go-home-btn:hover {\n  transform: scale(1.06);\n  box-shadow: 0 0 25px #94efdf, 0 0 40px #64e7d6;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(1.03);\n  }\n}\n\n@keyframes glow {\n  0% {\n    background-position: 0% 50%;\n  }\n  100% {\n    background-position: 100% 50%;\n  }\n}"
  }
  },
  "among-us":{
    "title":"Among Us",
    "icon":"fas fa-wand-magic-sparkles",
    "description":"一个基于《Among Us》游戏的创意页面，包含角色动画和互动元素。",
    "demo":"./assets/files/among-us.html",
    "code":{
      "html":"<div class=\"color-picker\">\n    <div class=\"color-btn\" data-main=\"#dc2626\" data-light=\"#ef4444\" style=\"background-color: #dc2626;\"></div>\n    <div class=\"color-btn\" data-main=\"#2563eb\" data-light=\"#3b82f6\" style=\"background-color: #2563eb;\"></div>\n    <div class=\"color-btn\" data-main=\"#16a34a\" data-light=\"#22c55e\" style=\"background-color: #16a34a;\"></div>\n    <div class=\"color-btn\" data-main=\"#ca8a04\" data-light=\"#eab308\" style=\"background-color: #ca8a04;\"></div>\n    <div class=\"color-btn\" data-main=\"#b33e15\" data-light=\"#ef7d0d\" style=\"background-color: #b33e15;\"></div>\n    <div class=\"color-btn\" data-main=\"#7c3aed\" data-light=\"#8b5cf6\" style=\"background-color: #7c3aed;\"></div>\n    <div class=\"color-btn\" data-main=\"#ec4899\" data-light=\"#f472b6\" style=\"background-color: #ec4899;\"></div>\n    <div class=\"color-btn\" data-main=\"#000000\" data-light=\"#374151\" style=\"background-color: #000000;\"></div>\n    <div class=\"color-btn\" data-main=\"#ffffff\" data-light=\"#f3f4f6\" style=\"background-color: #ffffff;\"></div>\n</div>\n\n<div class=\"character\">\n    <div class=\"body\"></div>\n    <div class=\"glass\">\n    <div class=\"white-reflection\"></div>\n    </div>\n    <div class=\"legs\">\n    <div class=\"leg-left\"></div>\n    <div class=\"leg-right\"></div>\n    </div>\n    <div class=\"bag\"></div>\n</div>",
      "css":"body{\n    margin: 0;\n    padding:0;\n    box-sizing: border-box;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #eee;\n}\n.character{\n    position: relative;\n    transform: scale(0.7);\n    margin-top: 80px;\n}\n/*character shadow*/\n.character::after{\n    content: '';\n    position: absolute;\n    width: 500px;\n    height: 100px;\n    background-color: #bebebe;\n    border-radius: 50%;\n    bottom: -20px;\n    z-index: -1;\n    left: 50%;\n    transform: translateX(-50%);\n}\n.body{\n    position: relative;\n    width: 240px;\n    height: 360px;\n    border: 25px solid #000;\n    border-bottom: none;\n    border-radius: 35% 45% 0 0;\n    background-color: #b33e15;\n    overflow: hidden;\n}\n.body::before{\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 90%;\n    background-color: #ef7d0d;\n    border-radius: 10% 10% 32% 39% / 0% 10% 31% 100%;\n}\n.glass{\n    position: absolute;\n    width: 200px;\n    height: 110px;\n    background-color: #4a646d;\n    border: 25px solid #000;\n    right: -40px;\n    top: 76px;\n    transform: rotate(-2deg);\n    border-radius: 25% 45% 40% 40%/ 50%;\n    overflow: hidden;\n}\n.glass::before{\n    content: \"\";\n    position: absolute;\n    right: 0;\n    width: 90%;\n    height: 85px;\n    background: #94C9DB;\n    border-radius: 10% 10% 27% 39% / 0% 10% 20% 100%;\n}\n.white-reflection{\n    position: absolute;\n    width: 110px;\n    height: 40px;\n    background-color: #fff;\n    transform: rotate(2deg);\n    top: 12px;\n    right: 26px;\n    border-radius: 30% 100% 30% 100% / 100% 90% 90% 100%;\n}\n.character .legs{\n    display: flex;\n    justify-content: space-between;\n    margin-top: -5px;\n    z-index:-1;\n}\n.character .leg-left{\n    width: 80px;\n    height: 110px;\n    background: #b33e15;\n    border: 25px solid #000;\n    border-top: none;\n    border-radius: 0 0 40% 40%;\n    position: relative;\n}\n.character .leg-right{\n    width: 80px;\n    height: 100px;\n    background: #b33e15;\n    border: 25px solid #000;\n    border-top: none;\n    border-radius: 0 0 40% 40%;\n}\n.character .leg-left::before{\n    content: \"\";\n    position: absolute;\n    width: 100px;\n    height: 25px;\n    background-color: #000;\n    left: 100%;\n    border-radius: 0 0 100% 0;\n}\n.character .bag{\n    position: absolute;\n    width: 90px;\n    height: 200px;\n    background-color: #ef7d0d;\n    top: 130px;\n    left: -75px;\n    z-index: -1;\n    border: 25px solid #000;\n    border-radius: 40% 0 0 40% / 30%;\n    overflow: hidden;\n}\n.character .bag::before{\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 80%;\n    background: #b33e15;\n    bottom: 0;\n    border-radius: 30% 70% 0 0/ 10% 50% 0 0;\n}\n\n/* 颜色选择器 */\n.color-picker {\n    position: absolute;\n    top: 50px;\n    left: 50%;\n    transform: translateX(-50%);\n    display: flex;\n    gap: 15px;\n    background: rgba(255,255,255,0.9);\n    padding: 15px;\n    border-radius: 25px;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n}\n\n.color-btn {\n    width: 40px;\n    height: 40px;\n    border: 3px solid #000;\n    border-radius: 50%;\n    cursor: pointer;\n    transition: transform 0.2s ease;\n}\n\n.color-btn:hover {\n    transform: scale(1.1);\n}\n\n.color-btn.active {\n    transform: scale(1.2);\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n}",
      "js":"const colorBtns = document.querySelectorAll('.color-btn');\nconst body = document.querySelector('.body');\nconst bodyBefore = document.querySelector('.body::before');\nconst legLeft = document.querySelector('.leg-left');\nconst legRight = document.querySelector('.leg-right');\nconst bag = document.querySelector('.bag');\nconst bagBefore = document.querySelector('.bag::before');\n\n// 设置默认激活颜色\ncolorBtns[4].classList.add('active'); // 橙色为默认\n\ncolorBtns.forEach(btn => {\n  btn.addEventListener('click', function() {\n    // 移除所有激活状态\n    colorBtns.forEach(b => b.classList.remove('active'));\n    // 添加当前激活状态\n    this.classList.add('active');\n    \n    const mainColor = this.dataset.main;\n    const lightColor = this.dataset.light;\n    \n    // 更改身体颜色\n    body.style.backgroundColor = mainColor;\n    legLeft.style.backgroundColor = mainColor;\n    legRight.style.backgroundColor = mainColor;\n    \n    // 更改背包和身体前景色\n    bag.style.backgroundColor = lightColor;\n    \n    // 通过CSS变量来更改伪元素颜色\n    document.documentElement.style.setProperty('--body-light-color', lightColor);\n    document.documentElement.style.setProperty('--bag-dark-color', mainColor);\n    \n    // 直接修改样式\n    const style = document.createElement('style');\n    style.textContent = `\n      .body::before { background-color: ${lightColor} !important; }\n      .bag::before { background: ${mainColor} !important; }\n    `;\n    \n    // 移除之前的动态样式\n    const existingStyle = document.querySelector('#dynamic-colors');\n    if (existingStyle) {\n      existingStyle.remove();\n    }\n    \n    style.id = 'dynamic-colors';\n    document.head.appendChild(style);\n  });\n});"
    }
  },
  "background-animation":{
    "title":"Background Animation",
    "icon":"fas fa-film",
    "description":"一个动态背景动画页面，使用CSS创建流动的背景效果。",
    "demo":"./assets/files/background-animation.html",
    "code":{
      "html":"<div class=\"slideshow\">\n    <div class=\"slide\"></div>\n    <div class=\"slide\"></div>\n    <div class=\"slide\"></div>\n    <div class=\"slide\"></div>\n</div>",
      "css":"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  font-family: sans-serif;\n  overflow: hidden;\n}\n\n.slideshow {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  width: 40%;\n  height: 50%;\n  z-index: -1;\n  border-radius: 16px;\n  box-shadow: 10px 10px 10px rgba(0,0,0,0.6);\n}\n\n.slide {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  opacity: 0;\n  animation: fade 16s infinite;\n  border-radius:16px;\n}\n\n.slide:nth-child(1) {\n  background-image: url('1.jpg');\n  animation-delay: 0s;\n}\n.slide:nth-child(2) {\n  background-image: url('2.jpg');\n  animation-delay: 4s;\n}\n.slide:nth-child(3) {\n  background-image: url('3.jpg');\n  animation-delay: 8s;\n}\n.slide:nth-child(4) {\n  background-image: url('4.jpg');\n  animation-delay: 12s;\n}\n\n@keyframes fade {\n  0% { opacity: 0; }\n  10% { opacity: 1; }\n  25% { opacity: 1; }\n  35% { opacity: 0; }\n  100% { opacity: 0; }\n}\n\n.content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: white;\n  text-align: center;\n  z-index: 1;\n  text-shadow: 0 0 10px rgba(0,0,0,0.6);\n}\n\n.content h1 {\n  font-size: 3em;\n  margin-bottom: 0.5em;\n}\n\n.content p {\n  font-size: 1.2em;\n}"
    }
  },
  "black-keyboard":{
    "title":"Black Keyboard",
    "icon":"fas fa-wand-magic-sparkles",
    "description":"一个黑色键盘效果的页面，使用CSS创建交互式按键动画。",
    "demo":"./assets/files/black-keyboard.html",
    "code":{
      "html":"<div>\n    <span><i>C</i></span>\n    <span><i>S</i></span>\n    <span><i>S</i></span>\n</div>",
      "css":"body{\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    height:100vh;\n    margin:0;\n    background-color:#232323;\n}\n\nspan{\n    position:relative;\n    display:inline-block;\n    width:70px;\n    height:70px;\n    padding:8px 15px;\n    margin:8px 4px;\n    border-radius:10px;\n    background:linear-gradient(100deg,#282828,#202020);\n    overflow:hidden;\n    box-shadow:\n    inset -8px 0 8px rgba(0,0,0,.15),\n    inset 0 -8px 8px rgba(0,0,0,.25),\n    0 0 2px rgba(0,0,0,.75),\n    10px 20px 35px rgba(0,0,0,.45);\n}\n\nspan::before{\n    content:'';\n    position:absolute;\n    inset:3px 12px 14px 4px;\n    background:linear-gradient(90deg,#232323,#4a4a4a);\n    border-radius:10px;\n    box-shadow:-10px -10px 10px rgba(255,255,255,.25),10px 5px 10px rgba(0,0,0,.15);\n    border:1px solid #0004;\n    border-right:none;\n}\n\nspan i{\n    position:relative;\n    color:white;\n    font-size:22px;\n}"
    }
  }
}
